"use strict";var D=function(e,r){return function(){return r||e((r={exports:{}}).exports,r),r.exports}};var N=D(function(yr,I){"use strict";var J=require("@stdlib/assert-is-plain-object"),P=require("@stdlib/assert-has-own-property"),K=require("@stdlib/assert-is-boolean").isPrimitive,Q=require("@stdlib/ndarray-base-assert-is-index-mode"),X=require("@stdlib/ndarray-base-assert-is-order"),O=require("@stdlib/string-format");function Z(e,r){return J(r)?P(r,"readonly")&&(e.readonly=r.readonly,!K(e.readonly))?new TypeError(O("invalid option. `%s` option must be a boolean. Option: `%s`.","readonly",e.readonly)):P(r,"mode")&&(e.mode=r.mode,!Q(e.mode))?new TypeError(O("invalid option. `%s` option must be a valid index mode. Option: `%s`.","mode",e.mode)):P(r,"order")&&(e.order=r.order,!X(e.order))?new TypeError(O("invalid option. `%s` option must be a memory layout. Option: `%s`.","order",e.order)):null:new TypeError(O("invalid argument. Options argument must be an object. Value: `%s`.",r))}I.exports=Z});var x=D(function(br,U){"use strict";var w=require("@stdlib/assert-is-nonnegative-integer").isPrimitive,$=require("@stdlib/assert-is-iterable-like"),rr=require("@stdlib/assert-is-collection"),T=require("@stdlib/assert-is-arraybuffer"),B=require("@stdlib/assert-is-plain-object"),er=require("@stdlib/assert-is-buffer"),b=require("@stdlib/ndarray-base-assert-is-data-type"),ar=require("@stdlib/assert-has-own-property"),k=require("@stdlib/ndarray-base-buffer"),A=require("@stdlib/array-typed"),R=require("@stdlib/array-base-copy"),h=require("@stdlib/ndarray-ctor"),C=require("@stdlib/ndarray-defaults"),nr=require("@stdlib/ndarray-base-strides2offset"),tr=require("@stdlib/buffer-from-arraybuffer"),M=require("@stdlib/buffer-from-array"),ir=require("@stdlib/buffer-from-buffer"),_=require("@stdlib/array-from-iterator"),p=require("@stdlib/ndarray-base-bytes-per-element"),z=require("@stdlib/symbol-iterator"),f=require("@stdlib/string-format"),m=C.get("dtypes.default"),E=C.get("order");function j(e){return e==="generic"}function F(e){return e==="binary"}function g(e){return ar(e,"order")?e.order:E}function y(e,r,t,n,a,u,l){var i,s,o,V,d;if(j(e))throw new TypeError(f("invalid argument. ArrayBuffer is incompatible with the specified data type. Value: `%s`.",e));return d=a,V=t*n,n<0&&(V*=-1,d-=V*p(e)),F(e)?i=tr(r,d,V):i=A(r,d,V,e),s=[t],o=[n],d=nr(s,o),arguments.length>6?new h(e,i,s,o,d,u,l):new h(e,i,s,o,d,u)}function q(e,r,t){var n,a;return t===null?n={}:n=t,w(e)?(a=k(r,e),new h(r,a,[a.length],[1],0,g(n),n)):er(e)?(j(r)?a=R(e):F(r)?a=ir(e):a=A(e,r),new h(r,a,[a.length],[1],0,g(n),n)):rr(e)?(j(r)?a=R(e):F(r)?a=M(e):a=A(e,r),new h(r,a,[a.length],[1],0,g(n),n)):T(e)?y(r,e,e.byteLength/p(r),1,0,g(n),n):$(e)?(j(r)?(a=e[z](),a=_(a)):F(r)?(a=e[z](),a=M(_(a))):a=A(e,r),new h(r,a,[a.length],[1],0,g(n),n)):t===null&&B(e)?(a=k(r,0),new h(r,a,[a.length],[1],0,g(e),e)):null}function ur(){var e,r,t,n,a,u,l,i;if(e=arguments.length,e===0)return l=k(m,0),new h(m,l,[l.length],[1],0,E);if(r=arguments[0],e===1){if(b(r))return q(0,r,null);if(i=q(r,m,null),i===null)throw new TypeError(f("invalid argument. Must provide a length, ArrayBuffer, typed array, array-like object, iterable, data type, or options object. Value: `%s`.",r));return i}if(t=arguments[1],e===2){if(b(r))return q(0,r,t);if(b(t)){if(i=q(r,t,null),i===null)throw new TypeError(f("invalid argument. First argument must be a length, ArrayBuffer, typed array, array-like object, or iterable. Value: `%s`.",r));return i}if(w(t)){if(!T(r))throw new TypeError(f("invalid argument. First argument must be an ArrayBuffer. Value: `%s`.",r));return y(m,r,(r.byteLength-t)/p(m),1,t,E)}if(i=q(r,m,t),i===null)throw new TypeError(f("invalid argument. First argument must be a length, ArrayBuffer, typed array, array-like object, or iterable. Value: `%s`.",r));return i}if(n=arguments[2],e===3){if(b(n)){if(!T(r))throw new TypeError(f("invalid argument. First argument must be an ArrayBuffer. Value: `%s`.",r));if(!w(t))throw new TypeError(f("invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.",t));return y(n,r,(r.byteLength-t)/p(n),1,t,E)}if(b(t)){if(i=q(r,t,n),i===null)throw new TypeError(f("invalid argument. First argument must be a length, ArrayBuffer, typed array, array-like object, or iterable. Value: `%s`.",r));return i}if(!T(r))throw new TypeError(f("invalid argument. First argument must be an ArrayBuffer. Value: `%s`.",r));if(!w(t))throw new TypeError(f("invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.",t));if(B(n))return y(m,r,(r.byteLength-t)/p(m),1,t,g(n),n);if(!w(n))throw new TypeError(f("invalid argument. Length must be a nonnegative integer. Value: `%s`.",n));return y(m,r,n,1,t,E)}if(a=arguments[3],e===4){if(!T(r))throw new TypeError(f("invalid argument. First argument must be an ArrayBuffer. Value: `%s`.",r));if(!w(t))throw new TypeError(f("invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.",t));if(w(n)){if(b(a))return y(a,r,n,1,t,E);if(!B(a))throw new TypeError(f("invalid argument. Options argument must be an object. Value: `%s`.",a));return y(m,r,n,1,t,g(a),a)}if(!b(n))throw new TypeError(f("invalid argument. Third argument must be a recognized/supported data type. Value: `%s`.",n));if(!B(a))throw new TypeError(f("invalid argument. Options argument must be an object. Value: `%s`.",a));return y(n,r,(r.byteLength-t)/p(n),1,t,g(a),a)}if(u=arguments[4],!T(r))throw new TypeError(f("invalid argument. First argument must be an ArrayBuffer. Value: `%s`.",r));if(!w(t))throw new TypeError(f("invalid argument. Byte offset must be a nonnegative integer. Value: `%s`.",t));if(!w(n))throw new TypeError(f("invalid argument. Length must be a nonnegative integer. Value: `%s`.",n));if(!b(a))throw new TypeError(f("invalid argument. Fourth argument must be a recognized/supported data type. Value: `%s`.",a));if(!B(u))throw new TypeError(f("invalid argument. Options argument must be an object. Value: `%s`.",u));return y(a,r,n,1,t,g(u),u)}U.exports=ur});var W=D(function(hr,S){"use strict";var L=require("@stdlib/assert-is-nonnegative-integer").isPrimitive,or=require("@stdlib/assert-is-iterable-like"),Y=require("@stdlib/assert-is-arraybuffer"),G=require("@stdlib/assert-is-collection"),fr=require("@stdlib/ndarray-base-assert-is-data-type"),sr=require("@stdlib/object-assign"),lr=require("@stdlib/string-format"),c=N(),v=x();function vr(e,r){var t,n;if(!fr(e))throw new TypeError(lr("invalid argument. First argument must be a supported data type. Value: `%s`.",e));if(t={},arguments.length>1&&(n=c(t,r),n))throw n;return a;function a(){var u,l,i,s,o;if(u=sr({},t),l=arguments.length,l===0)return v(e,u);if(l>3){if(o=c(u,arguments[3]),o)throw o;return v(arguments[0],arguments[1],arguments[2],e,u)}if(l===3){if(L(arguments[2]))return v(arguments[0],arguments[1],arguments[2],e,u);if(o=c(u,arguments[2]),o)throw o;return v(arguments[0],arguments[1],e,u)}if(l===2){if(i=arguments[0],s=arguments[1],L(i)){if(o=c(u,s),o)throw o;return v(i,e,u)}if(Y(i)){if(L(s))return v(i,s,e,u);if(o=c(u,s),o)throw o;return v(i,e,u)}if(G(i)){if(o=c(u,s),o)throw o;return v(i,e,u)}if(o=c(u,s),o)throw o;return v(i,e,u)}if(i=arguments[0],L(i)||Y(i)||G(i)||or(i))return v(i,e,u);if(o=c(u,i),o)throw o;return v(e,u)}}S.exports=vr});var mr=require("@stdlib/utils-define-nonenumerable-read-only-property"),gr=W(),H=x();mr(H,"factory",gr);module.exports=H;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
